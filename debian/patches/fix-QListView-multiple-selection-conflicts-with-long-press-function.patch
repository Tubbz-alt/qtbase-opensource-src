Index: qtbase-opensource-src/src/widgets/itemviews/qabstractitemview.cpp
===================================================================
--- qtbase-opensource-src.orig/src/widgets/itemviews/qabstractitemview.cpp
+++ qtbase-opensource-src/src/widgets/itemviews/qabstractitemview.cpp
@@ -4089,7 +4089,12 @@ QItemSelectionModel::SelectionFlags QAbs
         return QItemSelectionModel::Toggle|selectionBehaviorFlags();
     if (state == QAbstractItemView::DragSelectingState) {
         //when drag-selecting we need to clear any previous selection and select the current one
-        return QItemSelectionModel::Clear|QItemSelectionModel::SelectCurrent|selectionBehaviorFlags();
+
+        //fix multiple selection of QListView under touch screen and long press function conflict
+        if(event && event->type() == QEvent::MouseButtonPress)
+            return QItemSelectionModel::ClearAndSelect|selectionBehaviorFlags();
+        else
+            return QItemSelectionModel::Clear|QItemSelectionModel::SelectCurrent|selectionBehaviorFlags();
     }
 
     return QItemSelectionModel::ClearAndSelect|selectionBehaviorFlags();
Index: qtbase-opensource-src/src/widgets/itemviews/qlistview.cpp
===================================================================
--- qtbase-opensource-src.orig/src/widgets/itemviews/qlistview.cpp
+++ qtbase-opensource-src/src/widgets/itemviews/qlistview.cpp
@@ -812,7 +812,6 @@ void QListView::mouseMoveEvent(QMouseEve
 
         if (d->touchSlideTimer.isActive()) {
             if ((d->pressedPosition - d->offset() - e->pos()).manhattanLength() > 1.5 * QApplication::startDragDistance()) {
-                clearSelection();
                 this->setVerticalScrollMode(ScrollPerPixel);
                 this->setHorizontalScrollMode(ScrollPerPixel);
                 QScroller::grabGesture(this, QScroller::LeftMouseButtonGesture);
